name: Deployment

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

env:
  UNIT: com.narumi.chatgpt-bot
  WORKDIR: /Users/narumi/services/chatgpt-bot

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: [1.18.x]
        os: [darwin]
        arch: [arm64]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: go build -o chatgpt-bot ./cmd/main.go

      - uses: actions/upload-artifact@v3
        with:
          name: chatgpt-bot
          path: chatgpt-bot

  deploy:
    needs: build

    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: chatgpt-bot

      - name: Add executable permission
        run: chmod +x chatgpt-bot

      - name: Create .env file
        run: |
          echo TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }} > .env
          echo OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} >> .env
          echo BOT_WHITELIST=${{ vars.BOT_WHITELIST }} >> .env
          echo STORE_TYPE=redis >> .env

      - name: Stop and disable service
        continue-on-error: true
        run: |
          launchctl stop ${{ env.UNIT }}
          launchctl disable ${{ env.UNIT }}

      - name: Copy files
        run: |
          mkdir -p ${{ env.WORKDIR }}
          cp chatgpt-bot ${{ env.WORKDIR }}
          cp .env ${{ env.WORKDIR }}
          cp chatgpt-bot.plist /Users/narumi/Library/LaunchAgents

      - name: Start service
        run: |
          launchctl load com.narumi.chatgpt-bot
          launchctl enable ${{ env.UNIT }}
          launchctl start ${{ env.UNIT }}

      # - name: Stop and disable service
      #   continue-on-error: true
      #   run: |
      #     sudo systemctl stop ${{ env.UNIT }}
      #     sudo systemctl disable ${{ env.UNIT }}
      #     sudo systemctl reset-failed ${{ env.UNIT }}

      # - name: Copy files
      #   run: |
      #     sudo mkdir -p ${{ env.WORKDIR }}
      #     sudo cp chatgpt-bot ${{ env.WORKDIR }}
      #     sudo cp .env ${{ env.WORKDIR }}
      #     sudo cp ${{ env.UNIT }} /etc/systemd/system

      # - name: Start service
      #   run: |
      #     sudo systemctl daemon-reload
      #     sudo systemctl enable ${{ env.UNIT }}
      #     sudo systemctl start ${{ env.UNIT }}
