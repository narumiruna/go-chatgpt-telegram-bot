name: Deploy

on:
  workflow_dispatch:
  push:
  #   tags:
  #     - "v*.*.*"

env:
  UNIT: com.narumi.chatgpt-bot
  WORKDIR: /Users/narumi/services/chatgpt-bot
  PLIST_PATH: /Users/narumi/Library/LaunchAgents

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: ["1.21.x"]
        os: ["darwin"]
        arch: ["arm64"]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Build
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: go build -o chatgpt-bot ./cmd/main.go

      - uses: actions/upload-artifact@v3
        with:
          name: chatgpt-bot
          path: chatgpt-bot

  deploy:
    needs: build

    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v3
        with:
          name: chatgpt-bot

      - name: Create .env file
        run: |
          echo TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }} > .env
          echo OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} >> .env
          echo BOT_WHITELIST=${{ vars.BOT_WHITELIST }} >> .env
          echo STORE_TYPE=redis >> .env

      - name: Stop and disable service
        continue-on-error: true
        working-directory: ${{ env.PLIST_PATH }}
        run: |
          launchctl stop ${{ env.UNIT }}
          launchctl unload chatgpt-bot.plist

      - name: Copy files
        run: |
          mkdir -p ${{ env.WORKDIR }}
          chmod +x chatgpt-bot
          cp chatgpt-bot ${{ env.WORKDIR }}
          cp .env ${{ env.WORKDIR }}
          cp chatgpt-bot.plist ${{ env.PLIST_PATH }}

      - name: Start service
        working-directory: ${{ env.PLIST_PATH }}
        run: |
          launchctl load -w chatgpt-bot.plist
          launchctl start ${{ env.UNIT }}
